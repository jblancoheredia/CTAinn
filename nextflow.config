/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                             CTAinn Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                 Default config options for all compute environments
-----------------------------------------------------------------------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                                                   = null
    aligner                                                 = 'bwa-meth'  // Options: 'bwa-meth', 'bwa-mem2'

    // Genome
    genome                                                  = 'GRCh38'
    refs_dir                                                = '/Users/blancoj/Documents/MSKCC/CMOinnovation/REF'
    read_length                                             = 100
    genome_base                                             = "${refs_dir}/${genome}"
    ensembl_version                                         = 112

    // Methylation options
    metdir                                                  = "${params.genome_base}/methylation"
    metref                                                  = "${params.genome_base}/methylation/hg38_pUC19_lambda_unmod2kb.fa"
    metbed                                                  = "${params.genome_base}/methylation/EPIC-8v2-0_A1_methylation_sites_sorted.bed"
    metfai                                                  = "${params.genome_base}/methylation/hg38_pUC19_lambda_unmod2kb.fa.fai"
    rastair_not                                             = '0,0,0,0'
    rastair_nob                                             = '0,0,0,0'
    pymbias_plot_type                                       = 'pdf'
    pymbias_plot_ax_x                                       = 1200
    pymbias_plot_ax_y                                       = 800

    // MultiQC options
    multiqc_config                                          = null
    multiqc_title                                           = null
    multiqc_logo                                            = null
    max_multiqc_email_size                                  = '25.MB'
    multiqc_methods_description                             = null

    // Boilerplate options
    outdir                                                  = null
    publish_dir_mode                                        = 'copy'
    email                                                   = null
    email_on_fail                                           = null
    plaintext_email                                         = false
    monochrome_logs                                         = false
    hook_url                                                = null
    help                                                    = false
    help_full                                               = false
    show_hidden                                             = false
    version                                                 = false
    pipelines_testdata_base_path                            = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

    // Config options
    config_profile_name                                     = null
    config_profile_description                              = null
    custom_config_version                                   = 'master'
    custom_config_base                                      = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact                                  = null
    config_profile_url                                      = null

    // Schema validation default options
    validate_params                                         = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes                                          = true
        process.beforeScript                                = 'echo $HOSTNAME'
        cleanup                                             = false
        nextflow.enable.configProcessNamesValidation        = true
    }
    conda {
        conda.enabled                                       = true
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        conda.channels                                      = ['conda-forge', 'bioconda']
        apptainer.enabled                                   = false
    }
    mamba {
        conda.enabled                                       = true
        conda.useMamba                                      = true
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    docker {
        docker.enabled                                      = true
        conda.enabled                                       = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
        docker.runOptions                                   = '-u $(id -u):$(id -g) --platform=linux/amd64 -v /Users/Shared/TMPDIR:/tmp'
    }
    arm {
        docker.runOptions                                   = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled                                 = true
        singularity.autoMounts                              = true
        conda.enabled                                       = false
        docker.enabled                                      = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load mskcmoinn/ctainn custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/ctainn.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
//docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'



// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'mskcmoinn/ctainn'
    author          = """blancoj@mskcc.org"""
    homePage        = 'https://github.com/mskcmoinn/ctainn'
    description     = """MSKCC-CMO-Innovation cfDNA TAPS-Methylated analysis pipeline --> CTAinn is a customized analysis pipeline Nextflow-borne developed specifically for cfDNA TAPS-methylated samples with GRCh38 as genome reference. It was designed to be highly flexible and can be run on a wide range of computing environments, from a single laptop, to a computing cluster (HPC) or cloud computing environments (AWS). This pipeline was created using nf-core tools and following it's policies and regulations."""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '1.0.0'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
